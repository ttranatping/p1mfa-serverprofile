{
	"info": {
		"_postman_id": "d4cd7ae2-564d-44ff-bd9c-60eb717333fb",
		"name": "P14MFA Demo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "0 Premade demo details",
			"item": [
				{
					"name": "Token Admin App (client_credentials)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8e975b2-7571-4d9c-b703-d08da80af029",
								"exec": [
									"pm.test(\"Validate response status=200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Validate access_token property exists\", function () {",
									"    var response = pm.response.json();",
									"    pm.expect(response).to.have.property('access_token');",
									"});",
									"pm.test(\"Set environment variables for next test\", function () {",
									"    var response = pm.response.json();",
									"    pm.environment.set(\"accessToken\", response.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{adminAppSecret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{adminAppID}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"description": "Required",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{adminAppID}}",
									"description": "(For CLIENT_SECRET_POST; if included with Basic Auth, must match Header value)",
									"type": "text",
									"disabled": true
								},
								{
									"key": "client_secret",
									"value": "{{adminAppSecret}}",
									"description": "(For for CLIENT_SECRET_POST)",
									"type": "text",
									"disabled": true
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "https://auth.pingone.com/{{parentEnvID}}/as/token",
							"protocol": "https",
							"host": [
								"auth",
								"pingone",
								"com"
							],
							"path": [
								"{{parentEnvID}}",
								"as",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read organizations",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "11095658-cd75-4053-b77e-589b0155a387",
								"exec": [
									"pm.test(\"Validate response status=200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Set environment variables for next test\", function () {",
									"    var response = pm.response.json();",
									"    pm.environment.set(\"orgID\", response._embedded.organizations[0].id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{apiPath}}/organizations",
							"host": [
								"{{apiPath}}"
							],
							"path": [
								"organizations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read MFA license",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5052adb7-5c47-4bc5-aab8-77b3116c8571",
								"exec": [
									"pm.test(\"Validate response status=200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Set environment variables for next test\", function () {",
									"    var response = pm.response.json();",
									"    const licenseObject = response._embedded.licenses.find",
									"      (m => m.package === pm.collectionVariables.get(\"licenseType\"));",
									"    pm.environment.set(\"licenseID\", licenseObject.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{apiPath}}/organizations/{{orgID}}/licenses",
							"host": [
								"{{apiPath}}"
							],
							"path": [
								"organizations",
								"{{orgID}}",
								"licenses"
							]
						}
					},
					"response": []
				},
				{
					"name": "READ Roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dcbb5e84-aa78-41a8-9562-9c25a801a806",
								"exec": [
									"pm.test(\"Validate response status=200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Set environment variables for next test\", function () {",
									"    var response = pm.response.json();",
									"    const roleObject = response._embedded.roles.find",
									"      (m => m.name === \"Identity Data Admin\");",
									"    pm.environment.set(\"roleID-identityadmin\", roleObject.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiPath}}/roles",
							"host": [
								"{{apiPath}}"
							],
							"path": [
								"roles"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "1 Setup Environment",
			"item": [
				{
					"name": "CREATE Environment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39a1d1a3-bef9-4f98-a5e7-755984a73e4d",
								"exec": [
									"pm.test(\"Validate response status=201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Validate id property exists\", function () {",
									"    var response = pm.response.json();",
									"    pm.expect(response).to.have.property('id');",
									"});",
									"pm.test(\"Set environment variables for next test\", function () {",
									"    var response = pm.response.json();",
									"    pm.environment.set(\"envID\", response.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"P14MFA Demo - {{$timestamp}}\",\n    \"region\": \"NA\",\n    \"type\": \"SANDBOX\",\n    \"description\": \"Test Description\",\n    \"license\": {\"id\":\"{{licenseID}}\"}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{apiPath}}/environments",
							"host": [
								"{{apiPath}}"
							],
							"path": [
								"environments"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE Population",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e41792e4-97e5-43cc-bb3d-a4db148f3929",
								"exec": [
									"pm.test(\"Validate response status=201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Validate id property exists\", function () {",
									"    var response = pm.response.json();",
									"    pm.expect(response).to.have.property('id');",
									"});",
									"pm.test(\"Set environment variables for next test\", function () {",
									"    var response = pm.response.json();",
									"    pm.environment.set(\"popID\", response.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Population_{{$timestamp}}\",\n    \"description\": \"this is my population\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{apiPath}}/environments/{{envID}}/populations",
							"host": [
								"{{apiPath}}"
							],
							"path": [
								"environments",
								"{{envID}}",
								"populations"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE MFA Auth Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a0d45b0-991f-45db-ab12-4966a45b0218",
								"exec": [
									"pm.test(\"Validate response status=201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Validate id property exists\", function () {",
									"    var response = pm.response.json();",
									"    pm.expect(response).to.have.property('id');",
									"});",
									"pm.test(\"Set environment variables for next test\", function () {",
									"    var response = pm.response.json();",
									"    pm.environment.set(\"signonPolicyID\", response.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"MFA_Only_Policy\",\n    \"description\": \"A sign-on policy that requires username and password\",\n    \"default\": false\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{apiPath}}/environments/{{envID}}/signOnPolicies",
							"host": [
								"{{apiPath}}"
							],
							"path": [
								"environments",
								"{{envID}}",
								"signOnPolicies"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE MFA Auth Policy Actions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "672a9426-3a0d-4bb1-b9e3-33c5f6a82f9a",
								"exec": [
									"pm.test(\"Validate response status=201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Validate id property exists\", function () {",
									"    var response = pm.response.json();",
									"    pm.expect(response).to.have.property('id');",
									"});",
									"pm.test(\"Set environment variables for next test\", function () {",
									"    var response = pm.response.json();",
									"    pm.environment.set(\"signonPolicyActionID\", response.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"MULTI_FACTOR_AUTHENTICATION\",\n    \"priority\": 1,\n    \"sms\": {\n        \"enabled\": true\n    },\n    \"boundBiometrics\": {\n        \"enabled\": false\n    },\n    \"securityKey\": {\n        \"enabled\": false\n    },\n    \"email\": {\n        \"enabled\": true\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{apiPath}}/environments/{{envID}}/signOnPolicies/{{signonPolicyID}}/actions",
							"host": [
								"{{apiPath}}"
							],
							"path": [
								"environments",
								"{{envID}}",
								"signOnPolicies",
								"{{signonPolicyID}}",
								"actions"
							]
						}
					},
					"response": []
				},
				{
					"name": "READ Resources",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8a494b69-10f6-4ee7-905a-025fe7d5ed85",
								"exec": [
									"pm.test(\"Validate response status=200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Set environment variables for next test\", function () {",
									"    var response = pm.response.json();",
									"    const resourcesObject = response._embedded.resources.find",
									"      (m => m.name === \"openid\");",
									"    pm.environment.set(\"resourceID-openid\", resourcesObject.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiPath}}/environments/{{envID}}/resources",
							"host": [
								"{{apiPath}}"
							],
							"path": [
								"environments",
								"{{envID}}",
								"resources"
							]
						}
					},
					"response": []
				},
				{
					"name": "READ Resources Scopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "34a71fff-57e7-4d14-b902-8237be7d0c1a",
								"exec": [
									"pm.test(\"Validate response status=200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Set environment variables for next test\", function () {",
									"    var response = pm.response.json();",
									"    const scopesObject = response._embedded.scopes.find",
									"      (m => m.name === \"profile\");",
									"    pm.environment.set(\"scopeID-profile\", scopesObject.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiPath}}/environments/{{envID}}/resources/{{resourceID-openid}}/scopes",
							"host": [
								"{{apiPath}}"
							],
							"path": [
								"environments",
								"{{envID}}",
								"resources",
								"{{resourceID-openid}}",
								"scopes"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "2 Create Users",
			"item": [
				{
					"name": "Create default user",
					"item": [
						{
							"name": "CREATE",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6ce19e57-ca54-409b-b0cc-4ca90a660f65",
										"exec": [
											"pm.test(\"Validate response status=201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"pm.test(\"Validate id property exists\", function () {",
											"    var response = pm.response.json();",
											"    pm.expect(response).to.have.property('id');",
											"});",
											"pm.test(\"Set environment variables for next test\", function () {",
											"    var response = pm.response.json();",
											"    pm.environment.set(\"userID-1\", response.id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{defaultEmail}}\",\n    \"name\": {\n        \"given\": \"Tam\",\n        \"family\": \"Tran\"\n    },\n    \"population\": {\n        \"id\": \"{{popID}}\"\n    },\n    \"username\": \"{{defaultUsername}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{apiPath}}/environments/{{envID}}/users",
									"host": [
										"{{apiPath}}"
									],
									"path": [
										"environments",
										"{{envID}}",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "UPDATE Password (Admin)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d6bfed81-df30-4fa0-a41c-b668e3bbf09c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.pingidentity.password.reset+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"newPassword\":\"2Access!\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{apiPath}}/environments/{{envID}}/users/{{userID-1}}/password",
									"host": [
										"{{apiPath}}"
									],
									"path": [
										"environments",
										"{{envID}}",
										"users",
										"{{userID-1}}",
										"password"
									]
								}
							},
							"response": []
						},
						{
							"name": "UPDATE Password (Self)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1e2f05d8-f02a-4709-96e9-d7343ce7658c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.pingidentity.password.reset+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"currentPassword\":\"2Access!\",\n  \"newPassword\":\"{{defaultUserPassword}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{apiPath}}/environments/{{envID}}/users/{{userID-1}}/password",
									"host": [
										"{{apiPath}}"
									],
									"path": [
										"environments",
										"{{envID}}",
										"users",
										"{{userID-1}}",
										"password"
									]
								}
							},
							"response": []
						},
						{
							"name": "UPDATE User MFA Enabled",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "886b6e76-d4bf-4bb1-827d-888060998e4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mfaEnabled\": true\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{apiPath}}/environments/{{envID}}/users/{{userID-1}}/mfaEnabled",
									"host": [
										"{{apiPath}}"
									],
									"path": [
										"environments",
										"{{envID}}",
										"users",
										"{{userID-1}}",
										"mfaEnabled"
									]
								}
							},
							"response": []
						},
						{
							"name": "CREATE User Device (EMAIL)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5b0e5770-7ecf-49e0-8441-e603ce21b5fd",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"EMAIL\",\n    \"email\": \"{{defaultEmail}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{apiPath}}/environments/{{envID}}/users/{{userID-1}}/devices",
									"host": [
										"{{apiPath}}"
									],
									"path": [
										"environments",
										"{{envID}}",
										"users",
										"{{userID-1}}",
										"devices"
									]
								},
								"description": "\"phone\" -> (Based on E.164 & E.123): Leading plus sign, 1 to 3 digits country code, dot separator, 4 to 14 digits phone number, optionally 1 to 8 digits extension: ^\\+[0-9]{1,3}\\.[0-9]{4,14}(?:x[0-9]{1,8})?$\nEx: +1.3034682900x1234"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Pair mobile",
					"item": [
						{
							"name": "Create Pairing Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c373748b-5122-4fb3-bb24-e017565797b7",
										"exec": [
											"pm.test(\"Validate response status=201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"pm.test(\"Validate id property exists\", function () {",
											"    var response = pm.response.json();",
											"    pm.expect(response).to.have.property('id');",
											"});",
											"pm.test(\"Set environment variables for next test\", function () {",
											"    var response = pm.response.json();",
											"    pm.environment.set(\"pairingID\", response.id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJraWQiOiJkZWZhdWx0IiwiYWxnIjoiUlMyNTYifQ.eyJhdWQiOiJodHRwczpcL1wvYXBpLnBpbmdvbmUuY29tIiwib3JnIjoiOWMyOWQ4YWYtYjViNC00OTA2LWI0YzctMjdmMmFhZGQxNDE0IiwiaXNzIjoiaHR0cHM6XC9cL2F1dGgucGluZ29uZS5jb21cLzllYmQyY2Y3LWFhZWUtNGJjNy04N2M2LWU4ZGIzMTYwMTU1YlwvYXMiLCJleHAiOjE1OTkxNzUzMDUsImVudiI6IjllYmQyY2Y3LWFhZWUtNGJjNy04N2M2LWU4ZGIzMTYwMTU1YiIsImlhdCI6MTU5OTE3MTcwNSwiY2xpZW50X2lkIjoiNmQ5OTU5MjMtZGIyMy00ZDhhLTk3YzktNjk3MDA3YjE2NjE2In0.OpKdY44OqFk5uVHQpi0tL4MYGJXLPal_IYtXKNGr1UIJ2Am6jSrjTH38j-p8DCXDRyugMu6cAiZbMsz9RYAw-pGU4-3wxtV_QaNnWti01QH5jCeExtkKg8Enr2Hbl0QTLddAqewyS-hjvF_ukOp3-Qx6XqXWISG6tncP6TO8YYYOAsHIGf29Rn5YlqoA81UR6WyFi1lo63F5Xldiqz1GRS-zR83_tpEoRfe-Ef8phacqhydaNnrHGoYo8UMv_o1FGqOxWEBiine3WQlkEjS_Y-kMqFCGgn2QVh2llbRhqmNh0N9uBblAgBmPbOJcGYx7eumNVDTkcRbemtlafEXSUQ"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"applications\": [\n    { \n      \"id\": \"{{appID-appauth}}\" \n    }\n  ]\n}"
								},
								"url": {
									"raw": "https://api.pingone.com/v1/environments/{{envID}}/users/{{userID-1}}/pairingKeys",
									"protocol": "https",
									"host": [
										"api",
										"pingone",
										"com"
									],
									"path": [
										"v1",
										"environments",
										"{{envID}}",
										"users",
										"{{userID-1}}",
										"pairingKeys"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Pairing Key Status",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.pingone.com/v1/environments/{{envID}}/users/{{userID-1}}/pairingKeys/{{pairingID}}",
									"protocol": "https",
									"host": [
										"api",
										"pingone",
										"com"
									],
									"path": [
										"v1",
										"environments",
										"{{envID}}",
										"users",
										"{{userID-1}}",
										"pairingKeys",
										"{{pairingID}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get User Devices",
					"item": [
						{
							"name": "Get user devices",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJraWQiOiJkZWZhdWx0IiwiYWxnIjoiUlMyNTYifQ.eyJhdWQiOiJodHRwczpcL1wvYXBpLnBpbmdvbmUuY29tIiwib3JnIjoiOWMyOWQ4YWYtYjViNC00OTA2LWI0YzctMjdmMmFhZGQxNDE0IiwiaXNzIjoiaHR0cHM6XC9cL2F1dGgucGluZ29uZS5jb21cLzllYmQyY2Y3LWFhZWUtNGJjNy04N2M2LWU4ZGIzMTYwMTU1YlwvYXMiLCJleHAiOjE1OTkxNzUzMDUsImVudiI6IjllYmQyY2Y3LWFhZWUtNGJjNy04N2M2LWU4ZGIzMTYwMTU1YiIsImlhdCI6MTU5OTE3MTcwNSwiY2xpZW50X2lkIjoiNmQ5OTU5MjMtZGIyMy00ZDhhLTk3YzktNjk3MDA3YjE2NjE2In0.OpKdY44OqFk5uVHQpi0tL4MYGJXLPal_IYtXKNGr1UIJ2Am6jSrjTH38j-p8DCXDRyugMu6cAiZbMsz9RYAw-pGU4-3wxtV_QaNnWti01QH5jCeExtkKg8Enr2Hbl0QTLddAqewyS-hjvF_ukOp3-Qx6XqXWISG6tncP6TO8YYYOAsHIGf29Rn5YlqoA81UR6WyFi1lo63F5Xldiqz1GRS-zR83_tpEoRfe-Ef8phacqhydaNnrHGoYo8UMv_o1FGqOxWEBiine3WQlkEjS_Y-kMqFCGgn2QVh2llbRhqmNh0N9uBblAgBmPbOJcGYx7eumNVDTkcRbemtlafEXSUQ"
									}
								],
								"url": {
									"raw": "https://api.pingone.com/v1/environments/{{envID}}/users/{{userID-1}}/devices",
									"protocol": "https",
									"host": [
										"api",
										"pingone",
										"com"
									],
									"path": [
										"v1",
										"environments",
										"{{envID}}",
										"users",
										"{{userID-1}}",
										"devices"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "57fe7a1a-3499-4085-8dd8-466097f5a5ae",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4d8c5a9b-59c7-4ae6-8887-629cc7a8b2b2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "3 Create Applications",
			"item": [
				{
					"name": "PF Adapter WorkerApp",
					"item": [
						{
							"name": "CREATE Application (OIDC)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "009c5e93-f5f0-4085-9475-e3be3796793a",
										"exec": [
											"pm.test(\"Validate response status=201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"pm.test(\"Validate id property exists\", function () {",
											"    var response = pm.response.json();",
											"    pm.expect(response).to.have.property('id');",
											"});",
											"pm.test(\"Set environment variables for next test\", function () {",
											"    var response = pm.response.json();",
											"    pm.environment.set(\"appID-workerapp\", response.id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"PingFederate Adapter - WorkerApp\",\n\t\"enabled\": true,\n\t\"type\": \"WORKER\",\n\t\"protocol\": \"OPENID_CONNECT\",\n\t\"grantTypes\": [\n\t  \"CLIENT_CREDENTIALS\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"CLIENT_SECRET_BASIC\",\n\t\"pkceEnforcement\": \"OPTIONAL\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{apiPath}}/environments/{{envID}}/applications",
									"host": [
										"{{apiPath}}"
									],
									"path": [
										"environments",
										"{{envID}}",
										"applications"
									]
								}
							},
							"response": []
						},
						{
							"name": "UPDATE Application Secret",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b12d11e2-b783-4263-8d8f-ce6afb01613d",
										"exec": [
											"pm.test(\"Validate response status=200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Validate secret property exists\", function () {",
											"    var response = pm.response.json();",
											"    pm.expect(response).to.have.property('secret');",
											"});",
											"pm.test(\"Set environment variables for next test\", function () {",
											"    var response = pm.response.json();",
											"    pm.environment.set(\"appID-workerapp-secret\", response.secret);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{apiPath}}/environments/{{envID}}/applications/{{appID-workerapp}}/secret",
									"host": [
										"{{apiPath}}"
									],
									"path": [
										"environments",
										"{{envID}}",
										"applications",
										"{{appID-workerapp}}",
										"secret"
									]
								}
							},
							"response": []
						},
						{
							"name": "CREATE Application Role Assignments - Id Admin (may error)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f7202b3-d110-431c-a374-ed331ddb67cc",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"role\": {\n        \"id\": \"{{roleID-identityadmin}}\"\n    },\n    \"scope\": {\n        \"id\": \"{{envID}}\",\n        \"type\": \"ENVIRONMENT\"\n    }\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{apiPath}}/environments/{{envID}}/applications/{{appID-workerapp}}/roleAssignments",
									"host": [
										"{{apiPath}}"
									],
									"path": [
										"environments",
										"{{envID}}",
										"applications",
										"{{appID-workerapp}}",
										"roleAssignments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read Application Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "16c231f1-7fa7-48e9-b7a9-838af7feb598",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{apiPath}}/environments/{{envID}}/applications/{{appID-workerapp}}",
									"host": [
										"{{apiPath}}"
									],
									"path": [
										"environments",
										"{{envID}}",
										"applications",
										"{{appID-workerapp}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "PF Adapter EndUser",
					"item": [
						{
							"name": "Create Application",
							"item": [
								{
									"name": "CREATE Application (OIDC)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3deb1d53-4cd8-45fd-b94e-fb5987283061",
												"exec": [
													"pm.test(\"Validate response status=201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"pm.test(\"Validate id property exists\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response).to.have.property('id');",
													"});",
													"pm.test(\"Set environment variables for next test\", function () {",
													"    var response = pm.response.json();",
													"    pm.environment.set(\"appID-appauth\", response.id);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"PingFederate Adapter - EndUserApp\",\n  \"enabled\": true,\n  \"type\": \"NATIVE_APP\",\n  \"protocol\": \"OPENID_CONNECT\",\n  \"responseTypes\": [\n    \"ID_TOKEN\",\n    \"TOKEN\"\n  ],\n  \"grantTypes\": [\n    \"IMPLICIT\"\n  ],\n  \"refreshTokenDuration\": 2592000,\n  \"tokenEndpointAuthMethod\": \"CLIENT_SECRET_POST\",\n  \"pkceEnforcement\": \"OPTIONAL\",\n  \"refreshTokenRollingDuration\": 15552000,\n  \"redirectUris\": [\n  ]\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{apiPath}}/environments/{{envID}}/applications",
											"host": [
												"{{apiPath}}"
											],
											"path": [
												"environments",
												"{{envID}}",
												"applications"
											]
										}
									},
									"response": []
								},
								{
									"name": "UPDATE Application Secret",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b22b085a-6477-431f-b603-23b2b02c5a3f",
												"exec": [
													"pm.test(\"Validate response status=200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Validate secret property exists\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response).to.have.property('secret');",
													"});",
													"pm.test(\"Set environment variables for next test\", function () {",
													"    var response = pm.response.json();",
													"    pm.environment.set(\"appID-appauth-secret\", response.secret);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{accessToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{apiPath}}/environments/{{envID}}/applications/{{appID-appauth}}/secret",
											"host": [
												"{{apiPath}}"
											],
											"path": [
												"environments",
												"{{envID}}",
												"applications",
												"{{appID-appauth}}",
												"secret"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assign MFA Policy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "39c626fc-f815-40e4-bc76-40c692fb5fc9",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"priority\": 1,\n    \"signOnPolicy\": {\n    \t\"id\": \"{{signonPolicyID}}\"\n    }\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{apiPath}}/environments/{{envID}}/applications/{{appID-appauth}}/signOnPolicyAssignments",
											"host": [
												"{{apiPath}}"
											],
											"path": [
												"environments",
												"{{envID}}",
												"applications",
												"{{appID-appauth}}",
												"signOnPolicyAssignments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assign Profile Scope",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cc5add76-242f-4c21-9249-5301eec3b862",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resource\": {\n        \"id\": \"{{resourceID-openid}}\"\n    },\n    \"scopes\": [\n        {\n        \t\"id\": \"{{scopeID-profile}}\"\n        }\n    ]\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{apiPath}}/environments/{{envID}}/applications/{{appID-appauth}}/grants",
											"host": [
												"{{apiPath}}"
											],
											"path": [
												"environments",
												"{{envID}}",
												"applications",
												"{{appID-appauth}}",
												"grants"
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Application Details",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "04aee569-006f-4027-80dc-de5a14d776c1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{apiPath}}/environments/{{envID}}/applications/{{appID-appauth}}",
											"host": [
												"{{apiPath}}"
											],
											"path": [
												"environments",
												"{{envID}}",
												"applications",
												"{{appID-appauth}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Enable Android Push Notifications",
							"item": [
								{
									"name": "Configure Package Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "56704da2-0e6f-4367-853a-9dd1109c290f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"packageName\": \"{{androidFCMPackageName}}\",\n    \"name\": \"PingFederate Adapter - EndUserApp\",\n    \"enabled\": true,\n    \"type\": \"NATIVE_APP\",\n    \"protocol\": \"OPENID_CONNECT\",\n    \"createdAt\": \"2020-09-04T00:40:34.398Z\",\n    \"updatedAt\": \"2020-09-04T00:40:34.398Z\",\n    \"responseTypes\": [\n        \"ID_TOKEN\",\n        \"TOKEN\"\n    ],\n    \"grantTypes\": [\n        \"IMPLICIT\"\n    ],\n    \"refreshTokenDuration\": 2592000,\n    \"tokenEndpointAuthMethod\": \"CLIENT_SECRET_POST\",\n    \"pkceEnforcement\": \"OPTIONAL\",\n    \"refreshTokenRollingDuration\": 15552000,\n    \"redirectUris\": []\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{apiPath}}/environments/{{envID}}/applications/{{appID-appauth}}",
											"host": [
												"{{apiPath}}"
											],
											"path": [
												"environments",
												"{{envID}}",
												"applications",
												"{{appID-appauth}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Configure FCM Push",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3936c1f5-db2e-4dff-98e1-86da0e430dad",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FCM\",\n  \"key\": \"{{androidFCMServerKey}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{apiPath}}/environments/{{envID}}/applications/{{appID-appauth}}/pushCredentials",
											"host": [
												"{{apiPath}}"
											],
											"path": [
												"environments",
												"{{envID}}",
												"applications",
												"{{appID-appauth}}",
												"pushCredentials"
											]
										}
									},
									"response": []
								},
								{
									"name": "Configure Signon Action to include Push",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "052bcea5-abab-4a21-9b15-25e759e40c18",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"MULTI_FACTOR_AUTHENTICATION\",\n    \"priority\": 1,\n    \"sms\": {\n        \"enabled\": true\n    },\n    \"boundBiometrics\": {\n        \"enabled\": false\n    },\n    \"securityKey\": {\n        \"enabled\": false\n    },\n    \"email\": {\n        \"enabled\": true\n    },\n    \"applications\": [\n        {\n            \"id\": \"{{appID-appauth}}\",\n            \"autoEnrollment\": {\n                \"enabled\": true\n            },\n            \"deviceAuthorization\": {\n                \"enabled\": true\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{apiPath}}/environments/{{envID}}/signOnPolicies/{{signonPolicyID}}/actions/{{signonPolicyActionID}}",
											"host": [
												"{{apiPath}}"
											],
											"path": [
												"environments",
												"{{envID}}",
												"signOnPolicies",
												"{{signonPolicyID}}",
												"actions",
												"{{signonPolicyActionID}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7d6b9473-3bed-4c82-b793-d0585f74fe9a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "06942bfe-d63a-448f-8c9d-caf72815d986",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9da17871-cf10-4d84-88cd-071f5f63ab16",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7c2df994-193f-4cf8-9b67-b5df6b11a282",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Get Environment Details - Don't run outside POC/Demo",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"environmentId\":\"{{envID}}\",\n\t\"populationId\":\"{{popID}}\",\n    \"androidFCMPackageName\": \"{{androidFCMPackageName}}\",\n    \"test-users\": [{\n        \"username\": \"{{defaultUsername}}\",\n        \"password\": \"{{defaultUserPassword}}\"\n    }],\n\t\"admin-url\":\"https://console.pingone.com/index.html?env={{envID}}\",\n\t\"applications\":[\n\t\t{\n\t\t\t\"workerapp-client_id\":\"{{appID-workerapp}}\",\n\t\t\t\"workerapp-client_secret\":\"{{appID-workerapp-secret}}\"\n\t\t},\n\t\t{\n\t\t\t\"enduser-client_id\":\"{{appID-appauth}}\",\n\t\t\t\"enduser-client_secret\":\"{{appID-appauth-secret}}\"\n\t\t}\n\t]\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "https://httpbin.org/post",
					"protocol": "https",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"post"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "5840dc92-09e9-4f32-9cd1-492e9456387f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "769d3db5-09e7-4566-80a6-64ee41bd1bf5",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "92a78e41-60e5-4233-a13b-d00107da2cf7",
			"key": "apiPath",
			"value": "https://api.pingone.com/v1"
		},
		{
			"id": "7168c15a-d266-4096-919f-cbd2484aae88",
			"key": "parentEnvID",
			"value": "parentEnvID"
		},
		{
			"id": "3ff3b920-56b3-4f33-ac7c-bfbc759cf2ea",
			"key": "adminAppID",
			"value": "adminAppID"
		},
		{
			"id": "1083d331-68b8-4312-a51d-8e6a0df74d74",
			"key": "adminAppSecret",
			"value": "adminAppSecret"
		},
		{
			"id": "ad96b926-f453-4e02-8559-4036761c9d19",
			"key": "defaultUsername",
			"value": "p1mfauser"
		},
		{
			"id": "ea220e91-c5b0-4c53-8b00-ce104efdc480",
			"key": "defaultEmail",
			"value": "p1mfauser@mailinator.com"
		},
		{
			"id": "1273fe37-6245-4035-a057-8a6c16d792b4",
			"key": "defaultUserPassword",
			"value": "2FederateM0re!"
		},
		{
			"id": "dbec8409-2d7c-424a-9dc9-7c905cf41520",
			"key": "androidFCMPackageName",
			"value": "com.android.example.app"
		},
		{
			"id": "f5219631-596d-480b-998b-29307aff7177",
			"key": "androidFCMServerKey",
			"value": "<See Cloud Messaging Settings>"
		},
		{
			"id": "4ce5cf7f-3d81-461e-b6a9-2ae375a7dbd8",
			"key": "licenseType",
			"value": "MFA"
		}
	],
	"protocolProfileBehavior": {}
}